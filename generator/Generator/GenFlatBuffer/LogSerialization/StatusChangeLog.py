# automatically generated by the FlatBuffers compiler, do not modify

# namespace: LogSerialization

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StatusChangeLog(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StatusChangeLog()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStatusChangeLog(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # StatusChangeLog
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StatusChangeLog
    def BehaviorTree(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from LogSerialization.BehaviorTree import BehaviorTree
            obj = BehaviorTree()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StatusChangeLog
    def StateChanges(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 16
            from LogSerialization.StatusChange import StatusChange
            obj = StatusChange()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StatusChangeLog
    def StateChangesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # StatusChangeLog
    def StateChangesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def Start(builder): builder.StartObject(2)
def StatusChangeLogStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddBehaviorTree(builder, behaviorTree): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(behaviorTree), 0)
def StatusChangeLogAddBehaviorTree(builder, behaviorTree):
    """This method is deprecated. Please switch to AddBehaviorTree."""
    return AddBehaviorTree(builder, behaviorTree)
def AddStateChanges(builder, stateChanges): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(stateChanges), 0)
def StatusChangeLogAddStateChanges(builder, stateChanges):
    """This method is deprecated. Please switch to AddStateChanges."""
    return AddStateChanges(builder, stateChanges)
def StartStateChangesVector(builder, numElems): return builder.StartVector(16, numElems, 8)
def StatusChangeLogStartStateChangesVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartStateChangesVector(builder, numElems)
def End(builder): return builder.EndObject()
def StatusChangeLogEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)