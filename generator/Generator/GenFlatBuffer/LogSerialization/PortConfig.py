# automatically generated by the FlatBuffers compiler, do not modify

# namespace: LogSerialization

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PortConfig(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PortConfig()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPortConfig(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # PortConfig
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PortConfig
    def PortName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PortConfig
    def Remap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(2)
def PortConfigStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddPortName(builder, portName): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(portName), 0)
def PortConfigAddPortName(builder, portName):
    """This method is deprecated. Please switch to AddPortName."""
    return AddPortName(builder, portName)
def AddRemap(builder, remap): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(remap), 0)
def PortConfigAddRemap(builder, remap):
    """This method is deprecated. Please switch to AddRemap."""
    return AddRemap(builder, remap)
def End(builder): return builder.EndObject()
def PortConfigEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)